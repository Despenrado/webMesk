version: "3.9"
services:
  # pstgres-master
  db-master:
    container_name: postgres-master-webmesk
    sysctls:
      net.ipv4.ip_local_port_range: "49152 65535"
    deploy:
      resources:
        limits:
          cpus: '8.0'
          memory: 8192M
    image: postgres:14.1-alpine
    command: postgres -c 'max_connections=10000'
    restart: always
    environment:
      - POSTGRES_USER=gorm
      - POSTGRES_PASSWORD=gorm
      - POSTGRES_DB=webmesk
    ports:
      - '49261:5432'
    volumes: 
      - ../../database/postgresql:/var/lib/postgresql/data
  
  # redis
  cache-db:
    container_name: redis-webmesk # Container name
    image: redis
    ports:
      - "63799:6379"
    volumes: # Volume binding
      - "../../database/redis:/data"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
  
  # restapi
  golang-restapi-1: # The name of the service
    build:
      context: ..
      dockerfile: deploy/Dockerfile # Location of our Dockerfile
    image: despenrado/golang-restapi-webmesk:test.0.1
    container_name: golang-restapi-webmesk-1 # Container name
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
    depends_on: # start after
      - db-master
      - cache-db
    ports:
      - "8081"
    links: # list mapping: service_name:name_how_will_see_your_program
      - "db-master:psql"
      - "cache-db:redis"
  
  golang-restapi-2: # The name of the service
    build:
      context: ..
      dockerfile: deploy/Dockerfile # Location of our Dockerfile
    image: despenrado/golang-restapi-webmesk:test.0.1
    container_name: golang-restapi-webmesk-2 # Container name
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
    depends_on: # start after
      - db-master
      - cache-db
    ports:
      - "8081"
    links: # list mapping: service_name:name_how_will_see_your_program
      - "db-master:psql"
      - "cache-db:redis"

  golang-restapi-3: # The name of the service
    build:
      context: ..
      dockerfile: deploy/Dockerfile # Location of our Dockerfile
    image: despenrado/golang-restapi-webmesk:test.0.1
    container_name: golang-restapi-webmesk-3 # Container name
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
    depends_on: # start after
      - db-master
      - cache-db
    ports:
      - "8081"
    links: # list mapping: service_name:name_how_will_see_your_program
      - "db-master:psql"
      - "cache-db:redis"

  golang-restapi-4: # The name of the service
    build:
      context: ..
      dockerfile: deploy/Dockerfile # Location of our Dockerfile
    image: despenrado/golang-restapi-webmesk:test.0.1
    container_name: golang-restapi-webmesk-4 # Container name
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
    depends_on: # start after
      - db-master
      - cache-db
    ports:
      - "8081"
    links: # list mapping: service_name:name_how_will_see_your_program
      - "db-master:psql"
      - "cache-db:redis"

  nginx:
    image: nginx:1.22
    profiles: 
      - nginx
    container_name: nginx-webmesk
    volumes:
      - ../configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../configs/error.log:/etc/nginx/logs/error.log
    ports:
      - "8081:8081"
    links:
      - golang-restapi-1
      - golang-restapi-2
      - golang-restapi-3
      - golang-restapi-4

  telegraf:
    image: telegraf
    container_name: telegraf
    restart: always
    volumes:
      - ../configs/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    user: telegraf:999 # allows to read '/var/run/docker.sock'. 'number' is the group of docker daemon
    ports:
      - "8125:8125"

